{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SalesmanDashboard() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [customerName, setCustomerName] = useState('');\n  const [orderDetails, setOrderDetails] = useState('');\n\n  // Function to add a customer\n  const addCustomer = () => {\n    if (customerName.trim()) {\n      setCustomers([...customers, {\n        id: Date.now(),\n        name: customerName\n      }]);\n      setCustomerName('');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = customerId => {\n    setCustomers(customers.filter(customer => customer.id !== customerId));\n  };\n\n  // Function to add an order\n  const addOrder = customerId => {\n    if (orderDetails.trim()) {\n      setOrders([...orders, {\n        id: Date.now(),\n        customerId,\n        details: orderDetails\n      }]);\n      setOrderDetails('');\n    }\n  };\n\n  // Function to delete an order\n  const deleteOrder = orderId => {\n    setOrders(orders.filter(order => order.id !== orderId));\n  };\n\n  // Function to update an order\n  const updateOrder = (orderId, newDetails) => {\n    setOrders(orders.map(order => order.id === orderId ? {\n      ...order,\n      details: newDetails\n    } : order));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Salesman Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Customer Name\",\n          value: customerName,\n          onChange: e => setCustomerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCustomer,\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [customer.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteCustomer(customer.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, customer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manage Customer Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customer-orders\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Orders for \", customer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Order Details\",\n            value: orderDetails,\n            onChange: e => setOrderDetails(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addOrder(customer.id),\n            children: \"Add Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: orders.filter(order => order.customerId === customer.id).map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [order.details, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteOrder(order.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const newDetails = prompt('Update Order:', order.details);\n                  if (newDetails) updateOrder(order.id, newDetails);\n                },\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SalesmanDashboard, \"ObISLnDJAu3y2dfNKmQcBQPyXR0=\");\n_c = SalesmanDashboard;\nexport default SalesmanDashboard;\nvar _c;\n$RefreshReg$(_c, \"SalesmanDashboard\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","SalesmanDashboard","_s","customers","setCustomers","orders","setOrders","customerName","setCustomerName","orderDetails","setOrderDetails","addCustomer","trim","id","Date","now","name","deleteCustomer","customerId","filter","customer","addOrder","details","deleteOrder","orderId","order","updateOrder","newDetails","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","prompt","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\n\nfunction SalesmanDashboard() {\n  const [customers, setCustomers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [customerName, setCustomerName] = useState('');\n  const [orderDetails, setOrderDetails] = useState('');\n\n  // Function to add a customer\n  const addCustomer = () => {\n    if (customerName.trim()) {\n      setCustomers([...customers, { id: Date.now(), name: customerName }]);\n      setCustomerName('');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = (customerId) => {\n    setCustomers(customers.filter(customer => customer.id !== customerId));\n  };\n\n  // Function to add an order\n  const addOrder = (customerId) => {\n    if (orderDetails.trim()) {\n      setOrders([...orders, { id: Date.now(), customerId, details: orderDetails }]);\n      setOrderDetails('');\n    }\n  };\n\n  // Function to delete an order\n  const deleteOrder = (orderId) => {\n    setOrders(orders.filter(order => order.id !== orderId));\n  };\n\n  // Function to update an order\n  const updateOrder = (orderId, newDetails) => {\n    setOrders(orders.map(order => \n      order.id === orderId ? { ...order, details: newDetails } : order\n    ));\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"dashboard\">\n        <h2>Salesman Dashboard</h2>\n\n        {/* Customer Management Section */}\n        <div className=\"customer-management\">\n          <h3>Create Customer Account</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Customer Name\"\n            value={customerName}\n            onChange={(e) => setCustomerName(e.target.value)}\n          />\n          <button onClick={addCustomer}>Add Customer</button>\n          \n          <ul>\n            {customers.map((customer) => (\n              <li key={customer.id}>\n                {customer.name}\n                <button onClick={() => deleteCustomer(customer.id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Order Management Section */}\n        <div className=\"order-management\">\n          <h3>Manage Customer Orders</h3>\n          {customers.map((customer) => (\n            <div key={customer.id} className=\"customer-orders\">\n              <h4>Orders for {customer.name}</h4>\n\n              {/* Add Order Form */}\n              <input\n                type=\"text\"\n                placeholder=\"Order Details\"\n                value={orderDetails}\n                onChange={(e) => setOrderDetails(e.target.value)}\n              />\n              <button onClick={() => addOrder(customer.id)}>Add Order</button>\n\n              {/* List of Orders for this Customer */}\n              <ul>\n                {orders\n                  .filter(order => order.customerId === customer.id)\n                  .map((order) => (\n                    <li key={order.id}>\n                      {order.details}\n                      <button onClick={() => deleteOrder(order.id)}>Delete</button>\n                      <button\n                        onClick={() => {\n                          const newDetails = prompt('Update Order:', order.details);\n                          if (newDetails) updateOrder(order.id, newDetails);\n                        }}\n                      >\n                        Update\n                      </button>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SalesmanDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}