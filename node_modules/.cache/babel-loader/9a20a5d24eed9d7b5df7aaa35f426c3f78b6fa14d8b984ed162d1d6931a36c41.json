{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanOrdersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SalesmanOrdersPage() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [editOrderId, setEditOrderId] = useState(null);\n  const [orderUpdates, setOrderUpdates] = useState({});\n\n  // Load orders from localStorage when the component mounts\n  useEffect(() => {\n    const savedOrders = JSON.parse(localStorage.getItem('orders')) || [];\n    setOrders(savedOrders);\n  }, []);\n\n  // Handle input changes for order updates\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderUpdates({\n      ...orderUpdates,\n      [name]: value\n    });\n  };\n\n  // Function to delete an order\n  const deleteOrder = orderId => {\n    const updatedOrders = orders.filter(order => order.id !== orderId);\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to edit an order\n  const saveOrder = orderId => {\n    const updatedOrders = orders.map(order => order.id === orderId ? {\n      ...order,\n      ...orderUpdates\n    } : order);\n    setOrders(updatedOrders);\n    setEditOrderId(null);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Orders Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: editOrderId === order.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"status\",\n              placeholder: \"Status\",\n              defaultValue: order.status,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"deliveryDate\",\n              placeholder: \"Delivery Date\",\n              defaultValue: order.deliveryDate,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => saveOrder(order.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditOrderId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Order ID: \", order.id, \" - Status: \", order.status, \" - Delivery Date: \", order.deliveryDate, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditOrderId(order.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteOrder(order.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SalesmanOrdersPage, \"bEUWqPdrckr1U6H2sjohU6m1ZGY=\");\n_c = SalesmanOrdersPage;\nexport default SalesmanOrdersPage;\nvar _c;\n$RefreshReg$(_c, \"SalesmanOrdersPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","SalesmanOrdersPage","_s","orders","setOrders","editOrderId","setEditOrderId","orderUpdates","setOrderUpdates","savedOrders","JSON","parse","localStorage","getItem","handleInputChange","e","name","value","target","deleteOrder","orderId","updatedOrders","filter","order","id","setItem","stringify","saveOrder","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","defaultValue","status","onChange","deliveryDate","onClick","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanOrdersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\n\nfunction SalesmanOrdersPage() {\n  const [orders, setOrders] = useState([]);\n  const [editOrderId, setEditOrderId] = useState(null);\n  const [orderUpdates, setOrderUpdates] = useState({});\n\n  // Load orders from localStorage when the component mounts\n  useEffect(() => {\n    const savedOrders = JSON.parse(localStorage.getItem('orders')) || [];\n    setOrders(savedOrders);\n  }, []);\n\n  // Handle input changes for order updates\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderUpdates({ ...orderUpdates, [name]: value });\n  };\n\n  // Function to delete an order\n  const deleteOrder = (orderId) => {\n    const updatedOrders = orders.filter((order) => order.id !== orderId);\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to edit an order\n  const saveOrder = (orderId) => {\n    const updatedOrders = orders.map((order) =>\n      order.id === orderId ? { ...order, ...orderUpdates } : order\n    );\n    setOrders(updatedOrders);\n    setEditOrderId(null);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"orders-page\">\n        <h2>Orders Management</h2>\n\n        {/* Display list of orders */}\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>\n              {editOrderId === order.id ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    name=\"status\"\n                    placeholder=\"Status\"\n                    defaultValue={order.status}\n                    onChange={handleInputChange}\n                  />\n                  <input\n                    type=\"text\"\n                    name=\"deliveryDate\"\n                    placeholder=\"Delivery Date\"\n                    defaultValue={order.deliveryDate}\n                    onChange={handleInputChange}\n                  />\n                  <button onClick={() => saveOrder(order.id)}>Save</button>\n                  <button onClick={() => setEditOrderId(null)}>Cancel</button>\n                </div>\n              ) : (\n                <div>\n                  Order ID: {order.id} - Status: {order.status} - Delivery Date: {order.deliveryDate}\n                  <button onClick={() => setEditOrderId(order.id)}>Edit</button>\n                  <button onClick={() => deleteOrder(order.id)}>Delete</button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default SalesmanOrdersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}