{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmenLoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validCredentials = [{\n  email: 'salesman1@example.com',\n  password: 'password123'\n}, {\n  email: 'salesman2@example.com',\n  password: 'password456'\n}\n// Add more valid credentials as needed\n];\nfunction SalesmanLoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValid = validCredentials.some(cred => cred.email === email && cred.password === password);\n    if (isValid) {\n      // Successful login\n      console.log('Logged in successfully');\n      // Redirect to the dashboard or another page\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salesman-login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Salesman Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowPassword(!showPassword),\n            className: \"password-toggle\",\n            children: showPassword ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SalesmanLoginPage, \"/zlk35hW4nD8SjSO08bCAlX/sMQ=\");\n_c = SalesmanLoginPage;\nexport default SalesmanLoginPage;\nvar _c;\n$RefreshReg$(_c, \"SalesmanLoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","validCredentials","email","password","SalesmanLoginPage","_s","setEmail","setPassword","showPassword","setShowPassword","error","setError","handleSubmit","event","preventDefault","isValid","some","cred","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmenLoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst validCredentials = [\n  { email: 'salesman1@example.com', password: 'password123' },\n  { email: 'salesman2@example.com', password: 'password456' },\n  // Add more valid credentials as needed\n];\n\nfunction SalesmanLoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isValid = validCredentials.some(\n      cred => cred.email === email && cred.password === password\n    );\n\n    if (isValid) {\n      // Successful login\n      console.log('Logged in successfully');\n      // Redirect to the dashboard or another page\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <div className=\"salesman-login-page\">\n      <h2>Salesman Login</h2>\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        {error && <p className=\"error-message\">{error}</p>}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <div className=\"password-container\">\n            <input\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"password-toggle\"\n            >\n              {showPassword ? 'Hide' : 'Show'}\n            </button>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"login-button\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SalesmanLoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}