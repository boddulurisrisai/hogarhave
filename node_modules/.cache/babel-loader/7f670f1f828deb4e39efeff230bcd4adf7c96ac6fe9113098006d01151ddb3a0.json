{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch customers from localStorage or initialize an empty array if none exist\n  const getCustomers = () => JSON.parse(localStorage.getItem('customers')) || [];\n  const handleSubmit = event => {\n    event.preventDefault();\n    const customers = getCustomers();\n    if (isLogin) {\n      // Perform login validation\n      const customer = customers.find(cust => cust.email === email && cust.password === password);\n      if (customer) {\n        console.log('Customer logged in:', customer);\n        localStorage.setItem('loggedInCustomer', JSON.stringify(customer));\n        navigate('/CustomerLandingPage'); // Redirect to the Customer Landing Page\n      } else {\n        setError('Invalid email or password');\n      }\n    } else {\n      // Handle signup\n      if (customers.some(cust => cust.email === email)) {\n        setError('Email already exists');\n      } else {\n        const newCustomer = {\n          email,\n          password,\n          orders: []\n        };\n        customers.push(newCustomer);\n        localStorage.setItem('customers', JSON.stringify(customers));\n        console.log('New customer signed up:', newCustomer);\n        navigate('/customer/signup'); // Redirect to Signup Page\n      }\n    }\n  };\n  const handleToggle = () => {\n    // Toggle between login and signup mode\n    setIsLogin(!isLogin);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: isLogin ? 'Customer Login' : 'Customer Sign Up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: isLogin ? 'Login' : 'Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [isLogin ? \"Don't have an account?\" : 'Already have an account?', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleToggle,\n              children: isLogin ? 'Sign Up' : 'Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"SkaagP7tFRrzOzS4+YgkquUc+U4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","error","setError","navigate","getCustomers","JSON","parse","localStorage","getItem","handleSubmit","event","preventDefault","customers","customer","find","cust","console","log","setItem","stringify","some","newCustomer","orders","push","handleToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onSubmit","htmlFor","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\n\nfunction LoginPage() {\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch customers from localStorage or initialize an empty array if none exist\n  const getCustomers = () => JSON.parse(localStorage.getItem('customers')) || [];\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const customers = getCustomers();\n\n    if (isLogin) {\n      // Perform login validation\n      const customer = customers.find(\n        (cust) => cust.email === email && cust.password === password\n      );\n      if (customer) {\n        console.log('Customer logged in:', customer);\n        localStorage.setItem('loggedInCustomer', JSON.stringify(customer));\n        navigate('/CustomerLandingPage'); // Redirect to the Customer Landing Page\n      } else {\n        setError('Invalid email or password');\n      }\n    } else {\n      // Handle signup\n      if (customers.some((cust) => cust.email === email)) {\n        setError('Email already exists');\n      } else {\n        const newCustomer = { email, password, orders: [] };\n        customers.push(newCustomer);\n        localStorage.setItem('customers', JSON.stringify(customers));\n        console.log('New customer signed up:', newCustomer);\n        navigate('/customer/signup'); // Redirect to Signup Page\n      }\n    }\n  };\n\n  const handleToggle = () => {\n    // Toggle between login and signup mode\n    setIsLogin(!isLogin);\n    setError('');\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"login-page\">\n        <div className=\"login-box\">\n          <section id=\"content\">\n            <h2>{isLogin ? 'Customer Login' : 'Customer Sign Up'}</h2>\n            <form onSubmit={handleSubmit}>\n              {error && <p className=\"error-message\">{error}</p>}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\n            </form>\n            <p>\n              {isLogin ? \"Don't have an account?\" : 'Already have an account?'}\n              <button onClick={handleToggle}>\n                {isLogin ? 'Sign Up' : 'Login'}\n              </button>\n            </p>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}