{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SalesmanDashboard() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n\n  // Customer form fields\n  const [customerName, setCustomerName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to validate and add a customer\n  const addCustomer = () => {\n    if (password !== confirmPassword) {\n      setError('Passwords do not match!');\n      return;\n    }\n    if (customerName.trim() && username.trim() && email.trim() && address.trim()) {\n      const newCustomer = {\n        id: Date.now(),\n        customerName,\n        username,\n        password,\n        email,\n        address\n      };\n      setCustomers([...customers, newCustomer]);\n\n      // Clear form fields\n      setCustomerName('');\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n      setEmail('');\n      setAddress('');\n      setError('');\n    } else {\n      setError('All fields are required!');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = customerId => {\n    setCustomers(customers.filter(customer => customer.id !== customerId));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Salesman Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Customer Name\",\n          value: customerName,\n          onChange: e => setCustomerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCustomer,\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [customer.customerName, \" - \", customer.username, \" - \", customer.email, \" - \", customer.address, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteCustomer(customer.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, customer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SalesmanDashboard, \"9filx1nzH/ybkHzirYg+6CbAaf0=\");\n_c = SalesmanDashboard;\nexport default SalesmanDashboard;\nvar _c;\n$RefreshReg$(_c, \"SalesmanDashboard\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","SalesmanDashboard","_s","customers","setCustomers","customerName","setCustomerName","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","address","setAddress","error","setError","addCustomer","trim","newCustomer","id","Date","now","deleteCustomer","customerId","filter","customer","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\n\nfunction SalesmanDashboard() {\n  const [customers, setCustomers] = useState([]);\n  \n  // Customer form fields\n  const [customerName, setCustomerName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to validate and add a customer\n  const addCustomer = () => {\n    if (password !== confirmPassword) {\n      setError('Passwords do not match!');\n      return;\n    }\n    \n    if (customerName.trim() && username.trim() && email.trim() && address.trim()) {\n      const newCustomer = {\n        id: Date.now(),\n        customerName,\n        username,\n        password,\n        email,\n        address,\n      };\n      setCustomers([...customers, newCustomer]);\n      \n      // Clear form fields\n      setCustomerName('');\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n      setEmail('');\n      setAddress('');\n      setError('');\n    } else {\n      setError('All fields are required!');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = (customerId) => {\n    setCustomers(customers.filter(customer => customer.id !== customerId));\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"dashboard\">\n        <h2>Salesman Dashboard</h2>\n\n        {/* Customer Management Section */}\n        <div className=\"customer-management\">\n          <h3>Create Customer Account</h3>\n\n          {error && <p className=\"error-message\">{error}</p>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Customer Name\"\n            value={customerName}\n            onChange={(e) => setCustomerName(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n          <button onClick={addCustomer}>Add Customer</button>\n\n          {/* Display list of customers */}\n          <ul>\n            {customers.map((customer) => (\n              <li key={customer.id}>\n                {customer.customerName} - {customer.username} - {customer.email} - {customer.address}\n                <button onClick={() => deleteCustomer(customer.id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Order Management Section (keep unchanged as before) */}\n      </div>\n    </>\n  );\n}\n\nexport default SalesmanDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}