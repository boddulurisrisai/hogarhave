{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './CustomerSignupPage.css'; // Ensure correct CSS file import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3030/${isLogin ? 'login' : 'signup'}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // Send email and password to the server\n      });\n      const data = await response.json(); // Parse the response from the server\n\n      if (response.ok) {\n        if (isLogin) {\n          // Successful login\n          console.log('Customer logged in:', data);\n          localStorage.setItem('loggedInCustomer', JSON.stringify(data)); // Store logged-in user data in local storage\n          navigate('/CustomerLandingPage'); // Redirect to the Customer Landing Page\n        } else {\n          // Successful signup\n          console.log('New customer signed up:', data);\n          navigate('/CustomerLandingPage'); // Redirect to Customer Landing Page after signup\n        }\n      } else {\n        // Handle errors returned by the server\n        if (data.error === 'Incorrect password') {\n          setError('Incorrect password. Please try again.');\n        } else if (data.error === 'Email not found') {\n          setError('Email not found. Redirecting to signup...');\n          setTimeout(() => navigate('/customer/signup'), 2000); // Redirect to signup after 2 seconds\n        } else if (data.error === 'Email already exists') {\n          setError('Email already exists. Please login.');\n        } else {\n          setError(data.error || 'An error occurred. Please try again.');\n        }\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('An error occurred. Please try again.');\n    }\n  };\n  const handleToggle = () => {\n    // Toggle between login and signup mode\n    setIsLogin(!isLogin);\n    setError(''); // Clear errors when toggling\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: isLogin ? 'Customer Login' : 'Customer Sign Up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: isLogin ? 'Login' : 'Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [isLogin ? \"Don't have an account?\" : 'Already have an account?', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleToggle,\n              children: isLogin ? 'Sign Up' : 'Login'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"SkaagP7tFRrzOzS4+YgkquUc+U4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","localStorage","setItem","setTimeout","err","handleToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onSubmit","htmlFor","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './CustomerSignupPage.css'; // Ensure correct CSS file import\n\nfunction LoginPage() {\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and signup\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const response = await fetch(`http://localhost:3030/${isLogin ? 'login' : 'signup'}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }), // Send email and password to the server\n      });\n\n      const data = await response.json(); // Parse the response from the server\n\n      if (response.ok) {\n        if (isLogin) {\n          // Successful login\n          console.log('Customer logged in:', data);\n          localStorage.setItem('loggedInCustomer', JSON.stringify(data)); // Store logged-in user data in local storage\n          navigate('/CustomerLandingPage'); // Redirect to the Customer Landing Page\n        } else {\n          // Successful signup\n          console.log('New customer signed up:', data);\n          navigate('/CustomerLandingPage'); // Redirect to Customer Landing Page after signup\n        }\n      } else {\n        // Handle errors returned by the server\n        if (data.error === 'Incorrect password') {\n          setError('Incorrect password. Please try again.');\n        } else if (data.error === 'Email not found') {\n          setError('Email not found. Redirecting to signup...');\n          setTimeout(() => navigate('/customer/signup'), 2000); // Redirect to signup after 2 seconds\n        } else if (data.error === 'Email already exists') {\n          setError('Email already exists. Please login.');\n        } else {\n          setError(data.error || 'An error occurred. Please try again.');\n        }\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  const handleToggle = () => {\n    // Toggle between login and signup mode\n    setIsLogin(!isLogin);\n    setError(''); // Clear errors when toggling\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"login-page\">\n        <div className=\"login-box\">\n          <section id=\"content\">\n            <h2>{isLogin ? 'Customer Login' : 'Customer Sign Up'}</h2>\n            <form onSubmit={handleSubmit}>\n              {error && <p className=\"error-message\">{error}</p>} {/* Show error message */}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <button type=\"submit\">{isLogin ? 'Login' : 'Sign Up'}</button>\n            </form>\n            <p>\n              {isLogin ? \"Don't have an account?\" : 'Already have an account?'}\n              <button onClick={handleToggle}>\n                {isLogin ? 'Sign Up' : 'Login'}\n              </button>\n            </p>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}