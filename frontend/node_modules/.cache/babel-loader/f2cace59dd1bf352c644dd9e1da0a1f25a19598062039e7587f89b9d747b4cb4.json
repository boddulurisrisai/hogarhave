{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SalesmanDashboard() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [formFields, setFormFields] = useState({\n    customerName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    address: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  // Load customers and orders from localStorage when the component mounts\n  useEffect(() => {\n    const savedCustomers = JSON.parse(localStorage.getItem('customers')) || [];\n    const savedOrders = JSON.parse(localStorage.getItem('orders')) || [];\n    setCustomers(savedCustomers);\n    setOrders(savedOrders);\n  }, []);\n\n  // Handle form field changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n\n  // Function to validate and add a customer\n  const addCustomer = () => {\n    const {\n      customerName,\n      username,\n      password,\n      confirmPassword,\n      email,\n      address\n    } = formFields;\n    if (password !== confirmPassword) {\n      setError('Passwords do not match!');\n      setSuccess('');\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Invalid email format!');\n      setSuccess('');\n      return;\n    }\n    if (username.length < 5 || password.length < 6) {\n      setError('Username must be at least 5 characters and password at least 6 characters long!');\n      setSuccess('');\n      return;\n    }\n    if (customerName.trim() && username.trim() && email.trim() && address.trim()) {\n      const newCustomer = {\n        id: Date.now(),\n        customerName,\n        username,\n        password,\n        email,\n        address\n      };\n      const updatedCustomers = [...customers, newCustomer];\n      setCustomers(updatedCustomers);\n\n      // Save updated customers to localStorage\n      localStorage.setItem('customers', JSON.stringify(updatedCustomers));\n\n      // Clear form fields\n      setFormFields({\n        customerName: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        email: '',\n        address: ''\n      });\n      setError('');\n      setSuccess('Customer added successfully!');\n    } else {\n      setError('All fields are required!');\n      setSuccess('');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = customerId => {\n    const updatedCustomers = customers.filter(customer => customer.id !== customerId);\n    const updatedOrders = orders.filter(order => order.customerId !== customerId);\n    setCustomers(updatedCustomers);\n    setOrders(updatedOrders);\n\n    // Save updated customers and orders to localStorage\n    localStorage.setItem('customers', JSON.stringify(updatedCustomers));\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to delete an order\n  const deleteOrder = orderId => {\n    const updatedOrders = orders.filter(order => order.id !== orderId);\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to edit an order\n  const editOrder = (orderId, updatedOrder) => {\n    const updatedOrders = orders.map(order => order.id === orderId ? {\n      ...order,\n      ...updatedOrder\n    } : order);\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Salesman Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Customer Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Customer Name\",\n          name: \"customerName\",\n          value: formFields.customerName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          value: formFields.username,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: formFields.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: formFields.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"confirmPassword\",\n          value: formFields.confirmPassword,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Address\",\n          name: \"address\",\n          value: formFields.address,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCustomer,\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(CustomerItem, {\n            customer: customer,\n            deleteCustomer: deleteCustomer,\n            setSelectedCustomer: setSelectedCustomer,\n            orders: orders.filter(order => order.customerId === customer.id),\n            deleteOrder: deleteOrder,\n            editOrder: editOrder\n          }, customer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// Modularized Customer Item component\n_s(SalesmanDashboard, \"76W2Cax/Ne+yiEYnBqgCzcVvkfw=\");\n_c = SalesmanDashboard;\nfunction CustomerItem({\n  customer,\n  deleteCustomer,\n  setSelectedCustomer,\n  orders,\n  deleteOrder,\n  editOrder\n}) {\n  _s2();\n  const [editingOrder, setEditingOrder] = useState(null);\n  const [orderUpdates, setOrderUpdates] = useState({});\n  const handleOrderUpdateChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderUpdates({\n      ...orderUpdates,\n      [name]: value\n    });\n  };\n  const handleOrderEdit = orderId => {\n    setEditingOrder(orderId);\n  };\n  const handleOrderSave = orderId => {\n    editOrder(orderId, orderUpdates);\n    setEditingOrder(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [customer.customerName, \" - \", customer.username, \" - \", customer.email, \" - \", customer.address, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteCustomer(customer.id),\n      children: \"Delete Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), orders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Orders for \", customer.customerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: editingOrder === order.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"status\",\n              value: orderUpdates.status || order.status,\n              onChange: handleOrderUpdateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOrderSave(order.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Order ID: \", order.id, \" - Status: \", order.status, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOrderEdit(order.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteOrder(order.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s2(CustomerItem, \"j/zdfCFS6ScpprTECzNJ4ukUS7U=\");\n_c2 = CustomerItem;\nexport default SalesmanDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"SalesmanDashboard\");\n$RefreshReg$(_c2, \"CustomerItem\");","map":{"version":3,"names":["React","useState","useEffect","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","SalesmanDashboard","_s","customers","setCustomers","orders","setOrders","formFields","setFormFields","customerName","username","password","confirmPassword","email","address","error","setError","success","setSuccess","selectedCustomer","setSelectedCustomer","savedCustomers","JSON","parse","localStorage","getItem","savedOrders","handleInputChange","e","name","value","target","addCustomer","emailRegex","test","length","trim","newCustomer","id","Date","now","updatedCustomers","setItem","stringify","deleteCustomer","customerId","filter","customer","updatedOrders","order","deleteOrder","orderId","editOrder","updatedOrder","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","CustomerItem","_c","_s2","editingOrder","setEditingOrder","orderUpdates","setOrderUpdates","handleOrderUpdateChange","handleOrderEdit","handleOrderSave","status","_c2","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/pages/SalesmanDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header'; // Assuming you have a Header component\n\nfunction SalesmanDashboard() {\n  const [customers, setCustomers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [formFields, setFormFields] = useState({\n    customerName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    address: '',\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  // Load customers and orders from localStorage when the component mounts\n  useEffect(() => {\n    const savedCustomers = JSON.parse(localStorage.getItem('customers')) || [];\n    const savedOrders = JSON.parse(localStorage.getItem('orders')) || [];\n    setCustomers(savedCustomers);\n    setOrders(savedOrders);\n  }, []);\n\n  // Handle form field changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  // Function to validate and add a customer\n  const addCustomer = () => {\n    const { customerName, username, password, confirmPassword, email, address } = formFields;\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match!');\n      setSuccess('');\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError('Invalid email format!');\n      setSuccess('');\n      return;\n    }\n\n    if (username.length < 5 || password.length < 6) {\n      setError('Username must be at least 5 characters and password at least 6 characters long!');\n      setSuccess('');\n      return;\n    }\n\n    if (customerName.trim() && username.trim() && email.trim() && address.trim()) {\n      const newCustomer = {\n        id: Date.now(),\n        customerName,\n        username,\n        password,\n        email,\n        address,\n      };\n\n      const updatedCustomers = [...customers, newCustomer];\n      setCustomers(updatedCustomers);\n\n      // Save updated customers to localStorage\n      localStorage.setItem('customers', JSON.stringify(updatedCustomers));\n\n      // Clear form fields\n      setFormFields({\n        customerName: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        email: '',\n        address: '',\n      });\n      setError('');\n      setSuccess('Customer added successfully!');\n    } else {\n      setError('All fields are required!');\n      setSuccess('');\n    }\n  };\n\n  // Function to delete a customer\n  const deleteCustomer = (customerId) => {\n    const updatedCustomers = customers.filter((customer) => customer.id !== customerId);\n    const updatedOrders = orders.filter((order) => order.customerId !== customerId);\n    setCustomers(updatedCustomers);\n    setOrders(updatedOrders);\n\n    // Save updated customers and orders to localStorage\n    localStorage.setItem('customers', JSON.stringify(updatedCustomers));\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to delete an order\n  const deleteOrder = (orderId) => {\n    const updatedOrders = orders.filter((order) => order.id !== orderId);\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  // Function to edit an order\n  const editOrder = (orderId, updatedOrder) => {\n    const updatedOrders = orders.map((order) =>\n      order.id === orderId ? { ...order, ...updatedOrder } : order\n    );\n    setOrders(updatedOrders);\n\n    // Save updated orders to localStorage\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"dashboard\">\n        <h2>Salesman Dashboard</h2>\n\n        {/* Customer Management Section */}\n        <div className=\"customer-management\">\n          <h3>Create Customer Account</h3>\n\n          {error && <p className=\"error-message\">{error}</p>}\n          {success && <p className=\"success-message\">{success}</p>}\n\n          <input\n            type=\"text\"\n            placeholder=\"Customer Name\"\n            name=\"customerName\"\n            value={formFields.customerName}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            value={formFields.username}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            value={formFields.email}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formFields.password}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            value={formFields.confirmPassword}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Address\"\n            name=\"address\"\n            value={formFields.address}\n            onChange={handleInputChange}\n          />\n          <button onClick={addCustomer}>Add Customer</button>\n\n          {/* Display list of customers */}\n          <ul>\n            {customers.map((customer) => (\n              <CustomerItem\n                key={customer.id}\n                customer={customer}\n                deleteCustomer={deleteCustomer}\n                setSelectedCustomer={setSelectedCustomer}\n                orders={orders.filter(order => order.customerId === customer.id)}\n                deleteOrder={deleteOrder}\n                editOrder={editOrder}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// Modularized Customer Item component\nfunction CustomerItem({ customer, deleteCustomer, setSelectedCustomer, orders, deleteOrder, editOrder }) {\n  const [editingOrder, setEditingOrder] = useState(null);\n  const [orderUpdates, setOrderUpdates] = useState({});\n\n  const handleOrderUpdateChange = (e) => {\n    const { name, value } = e.target;\n    setOrderUpdates({ ...orderUpdates, [name]: value });\n  };\n\n  const handleOrderEdit = (orderId) => {\n    setEditingOrder(orderId);\n  };\n\n  const handleOrderSave = (orderId) => {\n    editOrder(orderId, orderUpdates);\n    setEditingOrder(null);\n  };\n\n  return (\n    <li>\n      {customer.customerName} - {customer.username} - {customer.email} - {customer.address}\n      <button onClick={() => deleteCustomer(customer.id)}>Delete Customer</button>\n\n      {/* Order Management */}\n      {orders.length > 0 && (\n        <div className=\"order-management\">\n          <h4>Orders for {customer.customerName}</h4>\n          <ul>\n            {orders.map((order) => (\n              <li key={order.id}>\n                {editingOrder === order.id ? (\n                  <div>\n                    <input\n                      type=\"text\"\n                      name=\"status\"\n                      value={orderUpdates.status || order.status}\n                      onChange={handleOrderUpdateChange}\n                    />\n                    <button onClick={() => handleOrderSave(order.id)}>Save</button>\n                  </div>\n                ) : (\n                  <div>\n                    Order ID: {order.id} - Status: {order.status}\n                    <button onClick={() => handleOrderEdit(order.id)}>Edit</button>\n                    <button onClick={() => deleteOrder(order.id)}>Delete</button>\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default SalesmanDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}