{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/pages/CheckoutPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useCart } from '../CartContext';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/LoginHeader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CheckoutPage() {\n  _s();\n  const {\n    cart,\n    clearCart\n  } = useCart(); // Access cart and clearCart from useCart hook\n  const [selectedWarranty, setSelectedWarranty] = useState({});\n  const [orderTotals, setOrderTotals] = useState({\n    totalAmount: 0,\n    shippingCost: 5,\n    // Example shipping cost\n    tax: 0,\n    totalWithShippingAndTax: 0,\n    discountsApplied: 0\n  });\n  const [specialDiscounts] = useState(0.1); // 10% special discount\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState(''); // New email state\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [creditCard, setCreditCard] = useState(''); // Credit card state\n  const [deliveryType, setDeliveryType] = useState('store'); // Default to store pickup\n  const [selectedStore, setSelectedStore] = useState(''); // State for selected store\n  const [storeLocations, setStoreLocations] = useState([]); // New state for store locations\n  const [error, setError] = useState(''); // State to handle errors during API fetch\n  const navigate = useNavigate();\n\n  // Warranty cost set to $25\n  const warrantyCost = 25;\n\n  // Handle warranty selection\n  const handleWarrantyChange = (itemName, isChecked) => {\n    setSelectedWarranty(prevState => ({\n      ...prevState,\n      [itemName]: isChecked\n    }));\n  };\n\n  // Calculate order totals\n  const calculateTotals = () => {\n    let subtotal = 0;\n    let totalDiscount = 0;\n    let totalWarrantyCost = 0;\n    cart.forEach(item => {\n      const itemTotal = item.price * item.quantity;\n      subtotal += itemTotal;\n\n      // Apply retailer discount\n      const discount = item.retailerDiscount ? itemTotal * item.retailerDiscount : 0;\n      totalDiscount += discount;\n\n      // Add warranty cost if selected\n      if (selectedWarranty[item.name]) {\n        totalWarrantyCost += warrantyCost; // Use fixed warranty cost\n      }\n    });\n\n    // Apply special discount (e.g., 10% off)\n    const discountAmount = subtotal * specialDiscounts;\n    const totalDiscountsApplied = totalDiscount + discountAmount;\n\n    // Calculate tax and total amount with shipping\n    const tax = subtotal * 0.07; // 7% tax\n    const totalWithShippingAndTax = subtotal + orderTotals.shippingCost + tax - totalDiscountsApplied + totalWarrantyCost;\n    setOrderTotals({\n      totalAmount: subtotal,\n      shippingCost: orderTotals.shippingCost,\n      tax: tax,\n      totalWithShippingAndTax: totalWithShippingAndTax,\n      discountsApplied: totalDiscountsApplied\n    });\n  };\n\n  // Update totals when the cart or warranty selection changes\n  useEffect(() => {\n    calculateTotals();\n  }, [cart, selectedWarranty]);\n\n  // Fetch store locations from the database\n  useEffect(() => {\n    const fetchStoreLocations = async () => {\n      try {\n        const response = await fetch('http://localhost:3030/api/stores'); // Adjust this endpoint as necessary\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched store locations:', data); // Debugging info\n        setStoreLocations(data);\n      } catch (error) {\n        console.error('Error fetching store locations:', error);\n        setError('Failed to load store locations.'); // Set error state\n      }\n    };\n    fetchStoreLocations();\n  }, []);\n\n  // Generate customer ID\n  const generateCustomerId = async () => {\n    // Define the range for the random customer ID\n    const min = 1000; // Minimum customer ID\n    const max = 9999; // Maximum customer ID\n\n    // Generate a random ID\n    const randomId = Math.floor(Math.random() * (max - min + 1)) + min;\n    return randomId; // Return the generated ID\n  };\n\n  // Usage\n  generateCustomerId().then(id => {\n    console.log('Generated Customer ID:', id);\n  }).catch(err => {\n    console.error('Error generating customer ID:', err);\n  });\n  const formatDateForMySQL = date => {\n    const pad = n => n < 10 ? '0' + n : n;\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n  };\n  const generateConfirmationNumber = () => {\n    return 'CONF-' + Math.floor(100000 + Math.random() * 900000); // Generates a random confirmation number\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const orderDate = new Date();\n    const deliveryDate = new Date(new Date().setDate(orderDate.getDate() + 12));\n    const confirmationNumber = generateConfirmationNumber();\n    try {\n      const customerId = await generateCustomerId(); // Generate customer ID here\n\n      // Prepare customer and order data\n      const customerData = {\n        customer_id: customerId,\n        name,\n        email,\n        address,\n        city,\n        state,\n        zipCode,\n        phoneNumber\n      };\n      const order = {\n        confirmation_number: confirmationNumber,\n        // Include confirmation number\n        customer_id: customerId,\n        total_amount: orderTotals.totalWithShippingAndTax,\n        // Include total amount\n        order_date: formatDateForMySQL(orderDate),\n        delivery_date: formatDateForMySQL(deliveryDate),\n        shipping_cost: orderTotals.shippingCost,\n        tax: orderTotals.tax,\n        discounts_applied: orderTotals.discountsApplied,\n        delivery_type: deliveryType,\n        delivery_address: address,\n        // Include other necessary fields\n        store_location: selectedStore,\n        order_status: 'Pending' // Set default order status\n      };\n\n      // Directly insert the customer data into the database\n      const customerResponse = await fetch('http://localhost:3030/api/customers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customerData)\n      });\n      if (!customerResponse.ok) {\n        throw new Error('Failed to save customer to the database.');\n      }\n\n      // Save the order directly into the database\n      const orderResponse = await fetch('http://localhost:3030/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(order)\n      });\n      if (!orderResponse.ok) {\n        throw new Error('Failed to save order to the database.');\n      }\n\n      // Store customer and order data in local storage\n      localStorage.setItem('customerData', JSON.stringify(customerData));\n      localStorage.setItem('orderData', JSON.stringify(order));\n\n      // Clear cart and navigate\n      clearCart();\n      navigate('/orders');\n    } catch (error) {\n      console.error('Error saving order:', error);\n      setError('Failed to place order.'); // Handle error state if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Order Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your cart is empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Items in Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: $\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Quantity: \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedWarranty[item.name] || false,\n                    onChange: e => handleWarrantyChange(item.name, e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this), \"Add Warranty ($\", warrantyCost, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Order Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Subtotal: $\", orderTotals.totalAmount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Discounts Applied: -$\", orderTotals.discountsApplied.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Shipping: $\", orderTotals.shippingCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tax: $\", orderTotals.tax.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Total: $\", orderTotals.totalWithShippingAndTax.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Customer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: city,\n                onChange: e => setCity(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"State:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: state,\n                onChange: e => setState(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Zip Code:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: zipCode,\n                onChange: e => setZipCode(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Phone Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                value: phoneNumber,\n                onChange: e => setPhoneNumber(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Delivery Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: deliveryType,\n                onChange: e => setDeliveryType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"store\",\n                  children: \"Store Pickup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"home\",\n                  children: \"Home Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), deliveryType === 'store' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Select Store:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedStore,\n                onChange: e => setSelectedStore(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a store\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this), storeLocations.map(store => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: store.name,\n                  children: [store.name, \" - \", store.address]\n                }, store.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Credit Card Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: creditCard,\n                onChange: e => setCreditCard(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CheckoutPage, \"aYPzTKdP4dew89HnK6WK+AItmBA=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useState","useEffect","useCart","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutPage","_s","cart","clearCart","selectedWarranty","setSelectedWarranty","orderTotals","setOrderTotals","totalAmount","shippingCost","tax","totalWithShippingAndTax","discountsApplied","specialDiscounts","name","setName","email","setEmail","address","setAddress","city","setCity","state","setState","zipCode","setZipCode","phoneNumber","setPhoneNumber","creditCard","setCreditCard","deliveryType","setDeliveryType","selectedStore","setSelectedStore","storeLocations","setStoreLocations","error","setError","navigate","warrantyCost","handleWarrantyChange","itemName","isChecked","prevState","calculateTotals","subtotal","totalDiscount","totalWarrantyCost","forEach","item","itemTotal","price","quantity","discount","retailerDiscount","discountAmount","totalDiscountsApplied","fetchStoreLocations","response","fetch","ok","Error","status","data","json","console","log","generateCustomerId","min","max","randomId","Math","floor","random","then","id","catch","err","formatDateForMySQL","date","pad","n","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","generateConfirmationNumber","handleSubmit","e","preventDefault","orderDate","Date","deliveryDate","setDate","confirmationNumber","customerId","customerData","customer_id","order","confirmation_number","total_amount","order_date","delivery_date","shipping_cost","discounts_applied","delivery_type","delivery_address","store_location","order_status","customerResponse","method","headers","body","JSON","stringify","orderResponse","localStorage","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onSubmit","map","type","checked","onChange","target","toFixed","value","required","store","_c","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/pages/CheckoutPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCart } from '../CartContext';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/LoginHeader';\n\nfunction CheckoutPage() {\n  const { cart, clearCart } = useCart(); // Access cart and clearCart from useCart hook\n  const [selectedWarranty, setSelectedWarranty] = useState({});\n  const [orderTotals, setOrderTotals] = useState({\n    totalAmount: 0,\n    shippingCost: 5, // Example shipping cost\n    tax: 0,\n    totalWithShippingAndTax: 0,\n    discountsApplied: 0,\n  });\n  const [specialDiscounts] = useState(0.1); // 10% special discount\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState(''); // New email state\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [creditCard, setCreditCard] = useState(''); // Credit card state\n  const [deliveryType, setDeliveryType] = useState('store'); // Default to store pickup\n  const [selectedStore, setSelectedStore] = useState(''); // State for selected store\n  const [storeLocations, setStoreLocations] = useState([]); // New state for store locations\n  const [error, setError] = useState(''); // State to handle errors during API fetch\n  const navigate = useNavigate();\n\n  // Warranty cost set to $25\n  const warrantyCost = 25;\n\n  // Handle warranty selection\n  const handleWarrantyChange = (itemName, isChecked) => {\n    setSelectedWarranty(prevState => ({\n      ...prevState,\n      [itemName]: isChecked\n    }));\n  };\n\n  // Calculate order totals\n  const calculateTotals = () => {\n    let subtotal = 0;\n    let totalDiscount = 0;\n    let totalWarrantyCost = 0;\n\n    cart.forEach(item => {\n      const itemTotal = item.price * item.quantity;\n      subtotal += itemTotal;\n\n      // Apply retailer discount\n      const discount = item.retailerDiscount ? itemTotal * item.retailerDiscount : 0;\n      totalDiscount += discount;\n\n      // Add warranty cost if selected\n      if (selectedWarranty[item.name]) {\n        totalWarrantyCost += warrantyCost; // Use fixed warranty cost\n      }\n    });\n\n    // Apply special discount (e.g., 10% off)\n    const discountAmount = subtotal * specialDiscounts;\n    const totalDiscountsApplied = totalDiscount + discountAmount;\n\n    // Calculate tax and total amount with shipping\n    const tax = subtotal * 0.07; // 7% tax\n    const totalWithShippingAndTax = subtotal + orderTotals.shippingCost + tax - totalDiscountsApplied + totalWarrantyCost;\n\n    setOrderTotals({\n      totalAmount: subtotal,\n      shippingCost: orderTotals.shippingCost,\n      tax: tax,\n      totalWithShippingAndTax: totalWithShippingAndTax,\n      discountsApplied: totalDiscountsApplied,\n    });\n  };\n\n  // Update totals when the cart or warranty selection changes\n  useEffect(() => {\n    calculateTotals();\n  }, [cart, selectedWarranty]);\n\n  // Fetch store locations from the database\n  useEffect(() => {\n    const fetchStoreLocations = async () => {\n      try {\n        const response = await fetch('http://localhost:3030/api/stores'); // Adjust this endpoint as necessary\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched store locations:', data); // Debugging info\n        setStoreLocations(data);\n      } catch (error) {\n        console.error('Error fetching store locations:', error);\n        setError('Failed to load store locations.'); // Set error state\n      }\n    };\n\n    fetchStoreLocations();\n  }, []);\n\n  // Generate customer ID\n  const generateCustomerId = async () => {\n    // Define the range for the random customer ID\n    const min = 1000; // Minimum customer ID\n    const max = 9999; // Maximum customer ID\n  \n    // Generate a random ID\n    const randomId = Math.floor(Math.random() * (max - min + 1)) + min;\n  \n    return randomId; // Return the generated ID\n  };\n  \n  // Usage\n  generateCustomerId().then(id => {\n    console.log('Generated Customer ID:', id);\n  }).catch(err => {\n    console.error('Error generating customer ID:', err);\n  });\n  \n  const formatDateForMySQL = (date) => {\n    const pad = (n) => (n < 10 ? '0' + n : n);\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\n  };\n\n  const generateConfirmationNumber = () => {\n    return 'CONF-' + Math.floor(100000 + Math.random() * 900000); // Generates a random confirmation number\n  };\n  \n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const orderDate = new Date();\n    const deliveryDate = new Date(new Date().setDate(orderDate.getDate() + 12));\n    const confirmationNumber = generateConfirmationNumber();\n    try {\n      const customerId = await generateCustomerId(); // Generate customer ID here\n\n      // Prepare customer and order data\n      const customerData = {\n        customer_id: customerId,\n        name,\n        email,\n        address,\n        city,\n        state,\n        zipCode,\n        phoneNumber,\n      };\n\n      const order = {\n        confirmation_number: confirmationNumber, // Include confirmation number\n        customer_id: customerId,\n        total_amount: orderTotals.totalWithShippingAndTax, // Include total amount\n        order_date: formatDateForMySQL(orderDate),\n        delivery_date: formatDateForMySQL(deliveryDate),\n        shipping_cost: orderTotals.shippingCost,\n        tax: orderTotals.tax,\n        discounts_applied: orderTotals.discountsApplied,\n        delivery_type: deliveryType,\n        delivery_address: address, // Include other necessary fields\n        store_location: selectedStore,\n        order_status: 'Pending', // Set default order status\n      };\n\n      // Directly insert the customer data into the database\n      const customerResponse = await fetch('http://localhost:3030/api/customers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(customerData),\n      });\n\n      if (!customerResponse.ok) {\n        throw new Error('Failed to save customer to the database.');\n      }\n\n      // Save the order directly into the database\n      const orderResponse = await fetch('http://localhost:3030/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(order),\n      });\n\n      if (!orderResponse.ok) {\n        throw new Error('Failed to save order to the database.');\n      }\n\n      // Store customer and order data in local storage\n      localStorage.setItem('customerData', JSON.stringify(customerData));\n      localStorage.setItem('orderData', JSON.stringify(order));\n\n      // Clear cart and navigate\n      clearCart();\n      navigate('/orders');\n    } catch (error) {\n      console.error('Error saving order:', error);\n      setError('Failed to place order.'); // Handle error state if needed\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"checkout-page\">\n        <h2>Checkout</h2>\n        <div className=\"checkout-container\">\n          <div className=\"order-summary\">\n            <h3>Order Summary</h3>\n\n            {cart.length === 0 ? (\n              <p>Your cart is empty.</p>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                {/* Display cart items */}\n                <h3>Items in Cart</h3>\n                {cart.map(item => (\n                  <div key={item.id} className=\"cart-item\">\n                    <p><strong>{item.name}</strong></p>\n                    <p>Price: ${item.price}</p>\n                    <p>Quantity: {item.quantity}</p>\n                    <div className=\"form-group\">\n                      <label>\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedWarranty[item.name] || false}\n                          onChange={(e) => handleWarrantyChange(item.name, e.target.checked)}\n                        />\n                        Add Warranty (${warrantyCost})\n                      </label>\n                    </div>\n                  </div>\n                ))}\n\n                {/* Totals */}\n                <h3>Order Summary</h3>\n                <p>Subtotal: ${orderTotals.totalAmount.toFixed(2)}</p>\n                <p>Discounts Applied: -${orderTotals.discountsApplied.toFixed(2)}</p>\n                <p>Shipping: ${orderTotals.shippingCost.toFixed(2)}</p>\n                <p>Tax: ${orderTotals.tax.toFixed(2)}</p>\n                <p><strong>Total: ${orderTotals.totalWithShippingAndTax.toFixed(2)}</strong></p>\n\n                {/* Customer Information Form */}\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <label>Name:</label>\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email:</label>\n                  <input\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Address:</label>\n                  <input\n                    type=\"text\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>City:</label>\n                  <input\n                    type=\"text\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>State:</label>\n                  <input\n                    type=\"text\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Zip Code:</label>\n                  <input\n                    type=\"text\"\n                    value={zipCode}\n                    onChange={(e) => setZipCode(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Phone Number:</label>\n                  <input\n                    type=\"tel\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    required\n                  />\n                </div>\n\n                {/* Delivery Type Selection */}\n                <div className=\"form-group\">\n                  <label>Delivery Type:</label>\n                  <select\n                    value={deliveryType}\n                    onChange={(e) => setDeliveryType(e.target.value)}\n                  >\n                    <option value=\"store\">Store Pickup</option>\n                    <option value=\"home\">Home Delivery</option>\n                  </select>\n                </div>\n\n                {/* Store Selection for Store Pickup */}\n                {deliveryType === 'store' && (\n                  <div className=\"form-group\">\n                    <label>Select Store:</label>\n                    <select\n                      value={selectedStore}\n                      onChange={(e) => setSelectedStore(e.target.value)}\n                      required\n                    >\n                      <option value=\"\">Select a store</option>\n                      {storeLocations.map(store => (\n                        <option key={store.id} value={store.name}>\n                          {store.name} - {store.address}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n\n                {/* Credit Card Information */}\n                <h3>Payment Information</h3>\n                <div className=\"form-group\">\n                  <label>Credit Card Number:</label>\n                  <input\n                    type=\"text\"\n                    value={creditCard}\n                    onChange={(e) => setCreditCard(e.target.value)}\n                    required\n                  />\n                </div>\n\n                <button type=\"submit\">Place Order</button>\n              </form>\n            )}\n          </div>\n\n          {error && <p className=\"error\">{error}</p>} {/* Display error message if any */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CheckoutPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}