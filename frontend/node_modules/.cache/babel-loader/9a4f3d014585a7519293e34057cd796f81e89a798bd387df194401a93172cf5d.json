{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Create a CartContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Utility function to generate a unique order ID\nconst generateOrderId = () => new Date().getTime();\n\n// Utility function to generate a confirmation number\nconst generateConfirmationNumber = () => Math.floor(Math.random() * 1000000);\n\n// Create a CartProvider component\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [orders, setOrders] = useState(() => JSON.parse(localStorage.getItem('orders')) || []);\n  const [customerInfo, setCustomerInfo] = useState({});\n  const navigate = useNavigate(); // Used to navigate to other pages\n\n  // Hardcoded 10 store locations for in-store pickup\n  const storeLocations = [{\n    id: 1,\n    name: 'SmartHomes Store - Downtown',\n    zipCode: '12345'\n  }, {\n    id: 2,\n    name: 'SmartHomes Store - Westside',\n    zipCode: '23456'\n  }, {\n    id: 3,\n    name: 'SmartHomes Store - Uptown',\n    zipCode: '34567'\n  }, {\n    id: 4,\n    name: 'SmartHomes Store - Eastside',\n    zipCode: '45678'\n  }, {\n    id: 5,\n    name: 'SmartHomes Store - Northpoint',\n    zipCode: '56789'\n  }, {\n    id: 6,\n    name: 'SmartHomes Store - Riverdale',\n    zipCode: '67890'\n  }, {\n    id: 7,\n    name: 'SmartHomes Store - Hilltop',\n    zipCode: '78901'\n  }, {\n    id: 8,\n    name: 'SmartHomes Store - Valley',\n    zipCode: '89012'\n  }, {\n    id: 9,\n    name: 'SmartHomes Store - Lakeside',\n    zipCode: '90123'\n  }, {\n    id: 10,\n    name: 'SmartHomes Store - Bayshore',\n    zipCode: '01234'\n  }];\n\n  // Function to add an item to the cart\n  const addToCart = (product, quantity = 1) => {\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      setCart(prevCart => prevCart.map(item => item.id === product.id ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item));\n    } else {\n      setCart(prevCart => [...prevCart, {\n        ...product,\n        quantity\n      }]);\n    }\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Function to update item quantity in the cart\n  const updateItemQuantity = (productId, quantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(quantity, 1)\n    } : item));\n  };\n\n  // Function to clear the cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Function to calculate the total price of items in the cart\n  const calculateTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Function to handle checkout\n  const checkout = customerData => {\n    const order = {\n      id: generateOrderId(),\n      // Unique order ID\n      items: cart,\n      ...customerData,\n      // Include customer info like name, address, delivery type, etc.\n      confirmationNumber: generateConfirmationNumber(),\n      // Random confirmation number\n      deliveryDate: new Date(new Date().setDate(new Date().getDate() + 14)) // 2 weeks later\n    };\n\n    // Add the new order to the orders list\n    const updatedOrders = [...orders, order];\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n    setOrders(updatedOrders);\n\n    // Clear cart after successful checkout\n    clearCart();\n\n    // Navigate to OrdersPage after checkout\n    navigate('/orders'); // Redirect to OrdersPage\n  };\n\n  // Function to cancel an order\n  const cancelOrder = orderId => {\n    const updatedOrders = orders.filter(order => order.id !== orderId);\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n    setOrders(updatedOrders);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      orders,\n      customerInfo,\n      storeLocations,\n      addToCart,\n      removeFromCart,\n      updateItemQuantity,\n      clearCart,\n      checkout,\n      cancelOrder,\n      setCustomerInfo,\n      calculateTotalPrice // Provide total price function\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use the CartContext\n_s(CartProvider, \"AKqjC1xR0uVS2tq5XWGXE7wcsbI=\", false, function () {\n  return [useNavigate];\n});\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useNavigate","jsxDEV","_jsxDEV","CartContext","generateOrderId","Date","getTime","generateConfirmationNumber","Math","floor","random","CartProvider","children","_s","cart","setCart","orders","setOrders","JSON","parse","localStorage","getItem","customerInfo","setCustomerInfo","navigate","storeLocations","id","name","zipCode","addToCart","product","quantity","existingItem","find","item","prevCart","map","removeFromCart","productId","filter","updateItemQuantity","max","clearCart","calculateTotalPrice","reduce","total","price","checkout","customerData","order","items","confirmationNumber","deliveryDate","setDate","getDate","updatedOrders","setItem","stringify","cancelOrder","orderId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Create a CartContext\nconst CartContext = createContext();\n\n// Utility function to generate a unique order ID\nconst generateOrderId = () => new Date().getTime();\n\n// Utility function to generate a confirmation number\nconst generateConfirmationNumber = () => Math.floor(Math.random() * 1000000);\n\n// Create a CartProvider component\nexport function CartProvider({ children }) {\n  const [cart, setCart] = useState([]);\n  const [orders, setOrders] = useState(() => JSON.parse(localStorage.getItem('orders')) || []);\n  const [customerInfo, setCustomerInfo] = useState({});\n  const navigate = useNavigate(); // Used to navigate to other pages\n\n  // Hardcoded 10 store locations for in-store pickup\n  const storeLocations = [\n    { id: 1, name: 'SmartHomes Store - Downtown', zipCode: '12345' },\n    { id: 2, name: 'SmartHomes Store - Westside', zipCode: '23456' },\n    { id: 3, name: 'SmartHomes Store - Uptown', zipCode: '34567' },\n    { id: 4, name: 'SmartHomes Store - Eastside', zipCode: '45678' },\n    { id: 5, name: 'SmartHomes Store - Northpoint', zipCode: '56789' },\n    { id: 6, name: 'SmartHomes Store - Riverdale', zipCode: '67890' },\n    { id: 7, name: 'SmartHomes Store - Hilltop', zipCode: '78901' },\n    { id: 8, name: 'SmartHomes Store - Valley', zipCode: '89012' },\n    { id: 9, name: 'SmartHomes Store - Lakeside', zipCode: '90123' },\n    { id: 10, name: 'SmartHomes Store - Bayshore', zipCode: '01234' },\n  ];\n\n  // Function to add an item to the cart\n  const addToCart = (product, quantity = 1) => {\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      setCart(prevCart =>\n        prevCart.map(item =>\n          item.id === product.id ? { ...item, quantity: item.quantity + quantity } : item\n        )\n      );\n    } else {\n      setCart(prevCart => [...prevCart, { ...product, quantity }]);\n    }\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = (productId) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Function to update item quantity in the cart\n  const updateItemQuantity = (productId, quantity) => {\n    setCart(prevCart =>\n      prevCart.map(item =>\n        item.id === productId ? { ...item, quantity: Math.max(quantity, 1) } : item\n      )\n    );\n  };\n\n  // Function to clear the cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Function to calculate the total price of items in the cart\n  const calculateTotalPrice = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Function to handle checkout\n  const checkout = (customerData) => {\n    const order = {\n      id: generateOrderId(), // Unique order ID\n      items: cart,\n      ...customerData, // Include customer info like name, address, delivery type, etc.\n      confirmationNumber: generateConfirmationNumber(), // Random confirmation number\n      deliveryDate: new Date(new Date().setDate(new Date().getDate() + 14)), // 2 weeks later\n    };\n\n    // Add the new order to the orders list\n    const updatedOrders = [...orders, order];\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n    setOrders(updatedOrders);\n\n    // Clear cart after successful checkout\n    clearCart();\n\n    // Navigate to OrdersPage after checkout\n    navigate('/orders');  // Redirect to OrdersPage\n  };\n\n  // Function to cancel an order\n  const cancelOrder = (orderId) => {\n    const updatedOrders = orders.filter(order => order.id !== orderId);\n    localStorage.setItem('orders', JSON.stringify(updatedOrders));\n    setOrders(updatedOrders);\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      orders,\n      customerInfo,\n      storeLocations,\n      addToCart,\n      removeFromCart,\n      updateItemQuantity,\n      clearCart,\n      checkout,\n      cancelOrder,\n      setCustomerInfo,\n      calculateTotalPrice // Provide total price function\n    }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\n// Custom hook to use the CartContext\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}