{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Function to add an item to the cart\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        // If item already exists in the cart, increase its quantity\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        // Add a new item with initial quantity of 1\n        return [...prevCart, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Function to update item quantity\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity > 0 ? newQuantity : 1\n    } // Ensure quantity can't go below 1\n    : item));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","updateItemQuantity","newQuantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/A20527035_Assignment1/demo1/src/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst CartContext = createContext();\n\nexport function CartProvider({ children }) {\n  const [cart, setCart] = useState([]);\n\n  // Function to add an item to the cart\n  const addToCart = (product) => {\n    setCart((prevCart) => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        // If item already exists in the cart, increase its quantity\n        return prevCart.map(item =>\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      } else {\n        // Add a new item with initial quantity of 1\n        return [...prevCart, { ...product, quantity: 1 }];\n      }\n    });\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = (productId) => {\n    setCart((prevCart) => prevCart.filter(item => item.id !== productId));\n  };\n\n  // Function to update item quantity\n  const updateItemQuantity = (productId, newQuantity) => {\n    setCart((prevCart) =>\n      prevCart.map(item =>\n        item.id === productId\n          ? { ...item, quantity: newQuantity > 0 ? newQuantity : 1 } // Ensure quantity can't go below 1\n          : item\n      )\n    );\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, updateItemQuantity }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMU,SAAS,GAAIC,OAAO,IAAK;IAC7BF,OAAO,CAAEG,QAAQ,IAAK;MACpB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAClE,IAAIH,YAAY,EAAE;QAChB;QACA,OAAOD,QAAQ,CAACK,GAAG,CAACF,IAAI,IACtBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,IACtE,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGH,QAAQ,EAAE;UAAE,GAAGD,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpCX,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACS,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACvE,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAGA,CAACF,SAAS,EAAEG,WAAW,KAAK;IACrDd,OAAO,CAAEG,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAACF,IAAI,IACfA,IAAI,CAACC,EAAE,KAAKI,SAAS,GACjB;MAAE,GAAGL,IAAI;MAAEG,QAAQ,EAAEK,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG;IAAE,CAAC,CAAC;IAAA,EACzDR,IACN,CACF,CAAC;EACH,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,SAAS;MAAES,cAAc;MAAEG;IAAmB,CAAE;IAAAhB,QAAA,EAClFA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACtB,EAAA,CAxCeF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA0C5B,OAAO,SAAS0B,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAGhC,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI6B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOF,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}