{"ast":null,"code":"var _jsxFileName = \"/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider to wrap your app and provide auth state\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // Store user object\n\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Save user in localStorage\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check localStorage on load\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","userData","localStorage","setItem","JSON","stringify","logout","removeItem","useEffect","storedUser","parse","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/srisaibodduluri/Desktop/EWA/Assignment2/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create the AuthContext\nconst AuthContext = createContext();\n\n// AuthProvider to wrap your app and provide auth state\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Store user object\n\n  const login = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Save user in localStorage\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // Check localStorage on load\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use AuthContext\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMU,KAAK,GAAIC,QAAQ,IAAK;IAC1BF,OAAO,CAACE,QAAQ,CAAC;IACjBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBP,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACAC,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGL,IAAI,CAACM,KAAK,CAACR,YAAY,CAACS,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIF,UAAU,EAAE;MACdV,OAAO,CAACU,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEE,KAAK;MAAEM;IAAO,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAApB,EAAA,CA5BaF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA6BzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7B,UAAU,CAACG,WAAW,CAAC;AAAA;AAAC0B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}